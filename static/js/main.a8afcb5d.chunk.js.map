{"version":3,"sources":["App.jsx","index.jsx"],"names":["goodsFromServer","SORT_ALPHABETICALLY","SORT_BY_LENGTH","App","useState","sortCase","setSortCase","isReversed","setIsReversed","sortedGoods","goods","preparedGoods","sort","good1","good2","localeCompare","length","reverse","getPreparedGoods","resetPossible","className","onClick","type","classnames","map","good","ReactDOM","render","document","getElementById"],"mappings":"iPAKaA,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGIC,EAAsB,WACtBC,EAAiB,cAuBhB,IAAMC,EAAM,WACjB,MAAgCC,mBAAS,IAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAoCF,oBAAS,GAA7C,mBAAOG,EAAP,KAAmBC,EAAnB,KACMC,EAxBR,SAA0BC,EAA1B,GAA4D,IAAzBL,EAAwB,EAAxBA,SAAUE,EAAc,EAAdA,WACrCI,EAAa,YAAOD,GAiB1B,OAfIL,GACFM,EAAcC,MAAK,SAACC,EAAOC,GACzB,OAAQT,GACN,KAAKJ,EACH,OAAOY,EAAME,cAAcD,GAE7B,KAAKZ,EACH,OAAOW,EAAMG,OAASF,EAAME,OAE9B,QACE,OAAO,MAKRT,EAAaI,EAAcM,UAAYN,EAO1CO,CAAiBlB,EAAiB,CAAEK,WAAUE,eAOlD,IAAMY,EAAgBd,GAAYE,EAElC,OACE,sBAAKa,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,QAAS,kBAAOf,EAAYL,IAC5BqB,KAAK,SACLF,UAAWG,IACT,SACA,UACA,CAAE,WAAYlB,IAAaJ,IAN/B,iCAYA,wBACEoB,QAAS,kBAAOf,EAAYJ,IAC5BoB,KAAK,SACLF,UAAWG,IACT,SACA,aACA,CAAE,WAAYlB,IAAaH,IAN/B,4BAYA,wBACEmB,QAAS,kBAAMb,GAAeD,IAC9Be,KAAK,SACLF,UAAWG,IACT,SACA,aACA,CAAE,YAAahB,IANnB,qBAYCY,GACC,wBACEE,QAhDV,WACEf,EAAY,IACZE,GAAc,IA+CNc,KAAK,SACLF,UAAU,4BAHZ,sBAUJ,6BACGX,EAAYe,KAAI,SAAAC,GAAI,OACnB,oBAAe,UAAQ,OAAvB,SACGA,GADMA,YCxGnBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.a8afcb5d.chunk.js","sourcesContent":["import 'bulma/css/bulma.css';\nimport './App.scss';\nimport { useState } from 'react';\nimport classnames from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst SORT_ALPHABETICALLY = 'alphabet';\nconst SORT_BY_LENGTH = 'good length';\n\nfunction getPreparedGoods(goods, { sortCase, isReversed }) {\n  const preparedGoods = [...goods];\n\n  if (sortCase) {\n    preparedGoods.sort((good1, good2) => {\n      switch (sortCase) {\n        case SORT_ALPHABETICALLY:\n          return good1.localeCompare(good2);\n\n        case SORT_BY_LENGTH:\n          return good1.length - good2.length;\n\n        default:\n          return 0;\n      }\n    });\n  }\n\n  return isReversed ? preparedGoods.reverse() : preparedGoods;\n}\n\nexport const App = () => {\n  const [sortCase, setSortCase] = useState('');\n  const [isReversed, setIsReversed] = useState(false);\n  const sortedGoods\n    = getPreparedGoods(goodsFromServer, { sortCase, isReversed });\n\n  function handleReset() {\n    setSortCase('');\n    setIsReversed(false);\n  }\n\n  const resetPossible = sortCase || isReversed;\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          onClick={() => (setSortCase(SORT_ALPHABETICALLY))}\n          type=\"button\"\n          className={classnames(\n            'button',\n            'is-info',\n            { 'is-light': sortCase !== SORT_ALPHABETICALLY },\n          )}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          onClick={() => (setSortCase(SORT_BY_LENGTH))}\n          type=\"button\"\n          className={classnames(\n            'button',\n            'is-success',\n            { 'is-light': sortCase !== SORT_BY_LENGTH },\n          )}\n        >\n          Sort by length\n        </button>\n\n        <button\n          onClick={() => setIsReversed(!isReversed)}\n          type=\"button\"\n          className={classnames(\n            'button',\n            'is-warning',\n            { 'is-light': !isReversed },\n          )}\n        >\n          Reverse\n        </button>\n\n        {resetPossible && (\n          <button\n            onClick={handleReset}\n            type=\"button\"\n            className=\"button is-danger is-light\"\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        {sortedGoods.map(good => (\n          <li key={good} data-cy=\"Good\">\n            {good}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}